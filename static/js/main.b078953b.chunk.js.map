{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","querry","setQuerry","setMovie","hasError","setHasError","loading","setLoading","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Object","hasOwn","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","film","some","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b078953b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { getMovie } from '../../api';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (film: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [querry, setQuerry] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleChangeQuerry = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuerry(event.target.value);\n    setHasError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n\n    if (querry) {\n      setHasError(false);\n\n      getMovie(querry)\n        .then(response => {\n          if (Object.hasOwn(response, 'Error')) {\n            throw new Error();\n          }\n\n          const newMovie = response as MovieData;\n\n          setMovie({\n            title: newMovie.Title || 'No title',\n            description: newMovie.Plot || 'No description',\n            imgUrl: newMovie.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : newMovie.Poster,\n            imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n            imdbId: newMovie.imdbID,\n          });\n        })\n        .catch(() => setHasError(true))\n        .finally(() => setLoading(false));\n    }\n  };\n\n  const handleMovoeAdd = () => {\n    if (movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuerry('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': hasError })}\n              value={querry}\n              onChange={handleChangeQuerry}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                {\n                  'is-light': !loading,\n                  'is-loading': loading,\n                },\n              )}\n              disabled={!querry}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovoeAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=78a44973';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (film: Movie) => {\n    const alreadyAdded = movies.some(movie => movie.imdbId === film.imdbId);\n\n    if (!alreadyAdded) {\n      setMovies(currentList => [...currentList, film]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}